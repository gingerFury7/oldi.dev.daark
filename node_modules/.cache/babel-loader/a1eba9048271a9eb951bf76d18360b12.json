{"ast":null,"code":"import { types } from 'mobx-state-tree';\nconst AppType = types.model('AppType', {\n  //  id: types.identifier,\n  icon: types.string,\n  name: types.string,\n  isChoosen: types.boolean\n});\nconst AppTypeStore = types.model('AppTypeStore', {\n  app: types.array(AppType)\n});\nconst AppStore = AppTypeStore.create({\n  app: [{\n    icon: '/Calculation/AppType/Apple.svg',\n    name: 'Apple',\n    isChoosen: false\n  }, {\n    icon: '/Calculation/AppType/Android.svg',\n    name: 'Android',\n    isChoosen: false\n  }]\n});\nconst CalculationStore = types.model('CalculationStore', {\n  appType: types.maybe(types.array(AppType)),\n  active: types.safeReference(AppType)\n});\nexport default CalculationStore;","map":{"version":3,"sources":["/Users/macbook/Desktop/Работа/react_test/daark/src/store/calculationStore.js"],"names":["types","AppType","model","icon","string","name","isChoosen","boolean","AppTypeStore","app","array","AppStore","create","CalculationStore","appType","maybe","active","safeReference"],"mappings":"AAAA,SAASA,KAAT,QAAsB,iBAAtB;AAEA,MAAMC,OAAO,GAAGD,KAAK,CAACE,KAAN,CAAY,SAAZ,EAAuB;AACnC;AACAC,EAAAA,IAAI,EAAEH,KAAK,CAACI,MAFuB;AAGnCC,EAAAA,IAAI,EAAEL,KAAK,CAACI,MAHuB;AAInCE,EAAAA,SAAS,EAAEN,KAAK,CAACO;AAJkB,CAAvB,CAAhB;AASA,MAAMC,YAAY,GAAGR,KAAK,CAACE,KAAN,CAAY,cAAZ,EAA4B;AAC7CO,EAAAA,GAAG,EAAET,KAAK,CAACU,KAAN,CAAYT,OAAZ;AADwC,CAA5B,CAArB;AAIA,MAAMU,QAAQ,GAAGH,YAAY,CAACI,MAAb,CAAoB;AACjCH,EAAAA,GAAG,EAAE,CACD;AACIN,IAAAA,IAAI,EAAE,gCADV;AAEIE,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,SAAS,EAAE;AAHf,GADC,EAMD;AACIH,IAAAA,IAAI,EAAE,kCADV;AAEIE,IAAAA,IAAI,EAAE,SAFV;AAGIC,IAAAA,SAAS,EAAE;AAHf,GANC;AAD4B,CAApB,CAAjB;AAeA,MAAMO,gBAAgB,GAAGb,KAAK,CAACE,KAAN,CAAY,kBAAZ,EAAgC;AACrDY,EAAAA,OAAO,EAAEd,KAAK,CAACe,KAAN,CAAYf,KAAK,CAACU,KAAN,CAAYT,OAAZ,CAAZ,CAD4C;AAErDe,EAAAA,MAAM,EAAEhB,KAAK,CAACiB,aAAN,CAAoBhB,OAApB;AAF6C,CAAhC,CAAzB;AAKA,eAAeY,gBAAf","sourcesContent":["import { types } from 'mobx-state-tree';\n\nconst AppType = types.model('AppType', {\n    //  id: types.identifier,\n    icon: types.string,\n    name: types.string,\n    isChoosen: types.boolean,\n})\n\n\n\nconst AppTypeStore = types.model('AppTypeStore', {\n    app: types.array(AppType)\n})\n\nconst AppStore = AppTypeStore.create({\n    app: [\n        {\n            icon: '/Calculation/AppType/Apple.svg',\n            name: 'Apple',\n            isChoosen: false,\n        },\n        {\n            icon: '/Calculation/AppType/Android.svg',\n            name: 'Android',\n            isChoosen: false,\n        }\n    ]\n})\n\nconst CalculationStore = types.model('CalculationStore', {\n    appType: types.maybe(types.array(AppType)),\n    active: types.safeReference(AppType)\n})\n\nexport default CalculationStore;"]},"metadata":{},"sourceType":"module"}